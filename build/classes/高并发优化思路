高并发的优化思路：

	1:  静态资源 如bootstrap，jquery等框架 用服务商提供的cdn加速
	
	2:  只需要读的数据，不需要改的数据。不要去mysql中去读取，放到redis缓存中去。
		
		比如，秒杀暴露的接口地址：最后几秒，用户一直会刷新
		
		正常的话用户一刷新，暴露接口地址的那个方法就会去mysql数据库中查找这个id的字段
		
		该字段包含秒杀开启时间和关闭时间，然后与系统当前的时间对比。然后做出判断，是否开启秒杀
		
		如果用户一直刷新，无疑是增加了数据库的压力
		
		这条记录几乎不怎么会改变，所以可以放到redis缓存中去，减少并发量。
		
		具体流程如下：
		
			get from redis 
			if (null) {
				get from mysql
				put into redis				
			} 
			
		ps. 序列化和反序列的时候用到了第三方的框架。
			用了protostuff，这个序列化更快而且数据大小可以达到原来的1/5 - 1/10左右
	
	3:  执行秒杀操作的时候，是一个事务
	
		首先先将商品库存数量减少，然后在进行用户插入明细。这期间用户执行sql会有网络延迟或者gc
	         
		所以可以把客户端的逻辑放到服务端来执行，即使用存储过程（虽然Alibaba手册中并不推荐使用存储过程）		
		
	4:	这个思路是一个好的思路
	
		一般的话秒杀执行步骤如下：
		
			1：update 库存减少
			2：insert 插入购买记录
			
		每次update的时候，由于是一个事务，mysql行级锁就会锁上一条记录。剩下的就只有等待了。
		
		假如我们这样：
			
			1： insert 插入购买记录
			2： update 库存减少
		
		insert主键是商品id和phone，一般很少冲突，不会锁上。然后在执行update，
		
		如果update成功那就commit，否则直接rollback即可。
		
		网络延迟和gc至少可以减少一倍。
		
	
			
		











